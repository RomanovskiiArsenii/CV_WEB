/* MAIN TEXT*/

.fade-in {
    opacity: 0;
    transform: translateY(20px);
    transition: opacity 3.5s, transform .5s;
}

.fade-in.show {
    opacity: 1;
    transform: translateY(0%);
}


/*HEADER_DESCRIPTION + NAV*/

@keyframes fadeIn {
    from {
        opacity: 0;
    }

    to {
        opacity: 1;
    }
}

@keyframes moveUp {
    from {
        transform: translateY(20%);
    }

    to {
        transform: translateX(0%);
    }
}

@keyframes reveal {
    100% {
        background-size: 300% 300%;
    }
}


/* LOADING CIRCLE */

.loading_animation {
    position: absolute;
    top: 50vh;
    left: 50vw;
    transform: translate(-50%, -50%);

    width: 40vw;
    /* height: 100vh; */
    
    overflow: hidden;
    overflow-y: hidden;
}

@media (max-width:1000px) and (orientation: landscape) {
    .loading_animation {
        width: 40vw;
        height: 40vw;
    }
}

@media (max-width: 1000px) and (orientation: portrait)  {
    .loading_animation {
        width: 80vw;
        height: 80vw;
    }
}

@media (min-width:1000px) and (max-width: 1300px){
    .loading_animation {
        width: 50vw;
        height: 50vw;
    }
}


.l_spinner {
    width: 100%;
    aspect-ratio: 1;
    border-radius: 50%;
    background:
    radial-gradient(farthest-side, #ff9d00 94%, #0000) top/4px 4px no-repeat,
    conic-gradient(#0000 30%, #000000);
    -webkit-mask: radial-gradient(farthest-side, #0000 calc(100% - 4px), #000 0);
    animation: fadeIn 1s ease, s3 2s infinite linear;
    overflow: hidden;
}

@keyframes s3 {
    100% {
        transform: rotate(1turn)
    }
}


/* SWUP */

.swup-container {
    position: fixed;
    width: 100%;
    height: 100vh;
    top: 0;
    left: 0;
    z-index: 20;
    pointer-events: none;
}

.move-container {
    transform: translateX(100%);
    width: 100%;
    height: 25vh;
    background: rgb(255, 180, 40);
}

.hidden {
    display: none;
}

@keyframes moveRight {
    from {
        transform: translateX(100%);
    }

    to {
        transform: translateX(0%);
    }
}


/* LOADING POLYGON */

/* polygon {
    fill: none;
    stroke: rgb(0, 0, 0);
    stroke-width: 2;
    stroke-dasharray: 300;
    stroke-dashoffset: 300;
    animation: draw 3s forwards ease-in-out 1s;
    animation-iteration-count: infinite;
}

@keyframes draw {
    from {
        stroke-dashoffset: 300;
    }

    to {
        stroke-dashoffset: 0;
    }
}

.loading_animation {
    position: absolute;
    top: 50vh;
    left: 50%;
    transform: translate(-50%, -50%);
    z-index: -1;
    width: 100px;
    height: 100px;
} */